// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  image         String?
  osis          String?
  submissionId  String?
  initialized   Boolean   @default(false)

  accounts   Account[]
  submission Submission? @relation(fields: [submissionId], references: [id])
  role       Role        @default(COMPETITOR)
  experience Experience?
  formInfo   FormInfo?
}

model Submission {
  id          String   @id @default(cuid())
  title       String   @unique
  description String
  media       String[] @default([])
  members     User[]
  tracks      Track[]  @default([GENERAL])
  public      Boolean  @default(false)
  submitted   Boolean  @default(false)
}

model FormInfo {
  id              String   @id @default(cuid())
  osis            String
  year            Int
  discordHandle   String   @unique
  hasTeam         Boolean
  shouldMatchTeam Boolean?
  teamMembers     String[] @default([])
  experience      Experience

  userId String @unique
  user   User?  @relation(fields: [userId], references: [id])
}

enum Track {
  GENERAL
  BEGINNER
  SPONSOR_PENDING
}

enum Experience {
  NONE
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum Role {
  COMPETITOR
  ADMIN
}
